{"ast":null,"code":"import { takeEvery, put } from \"redux-saga/effects\";\nimport { ADD_MAINCATEGORY, ADD_MAINCATEGORY_RED, DELETE_MAINCATEGORY, DELETE_MAINCATEGORY_RED, GET_MAINCATEGORY, GET_MAINCATEGORY_RED, UPDATE_MAINCATEGORY, UPDATE_MAINCATEGORY_RED } from \"../Constants\";\nimport { addRecord } from \"./Services/MainCategoryServices\";\nfunction* addSaga(action) {\n  let response = yield addRecord(action.payload);\n  yield put({\n    type: ADD_MAINCATEGORY_RED,\n    payload: response\n  });\n}\nfunction* getSaga() {\n  let response = yield getRecord(action.payload);\n  yield put({\n    type: GET_MAINCATEGORY_RED,\n    payload: response\n  });\n}\nfunction* updateSaga(action) {\n  yield updateRecord(action.payload);\n  yield put({\n    type: UPDATE_MAINCATEGORY_RED,\n    payload: action.payload\n  });\n}\nfunction* deleteSaga(action) {\n  yield deleteRecord(action.payload);\n  yield put({\n    type: DELETE_MAINCATEGORY_RED,\n    payload: action.payload\n  });\n}\nexport default function* maincategorySaga() {\n  yield takeEvery(ADD_MAINCATEGORY, addSaga);\n  yield takeEvery(GET_MAINCATEGORY, getSaga);\n  yield takeEvery(UPDATE_MAINCATEGORY, updateSaga);\n  yield takeEvery(DELETE_MAINCATEGORY, deleteSaga);\n}","map":{"version":3,"names":["takeEvery","put","ADD_MAINCATEGORY","ADD_MAINCATEGORY_RED","DELETE_MAINCATEGORY","DELETE_MAINCATEGORY_RED","GET_MAINCATEGORY","GET_MAINCATEGORY_RED","UPDATE_MAINCATEGORY","UPDATE_MAINCATEGORY_RED","addRecord","addSaga","action","response","payload","type","getSaga","getRecord","updateSaga","updateRecord","deleteSaga","deleteRecord","maincategorySaga"],"sources":["D:/Ducat 2023/Mern stack/react js 1 pm/Project/ekart/src/Store/Sagas/MaincategorySagas.jsx"],"sourcesContent":["import {takeEvery, put} from \"redux-saga/effects\"\r\nimport { ADD_MAINCATEGORY, ADD_MAINCATEGORY_RED, DELETE_MAINCATEGORY, DELETE_MAINCATEGORY_RED, GET_MAINCATEGORY, GET_MAINCATEGORY_RED, UPDATE_MAINCATEGORY, UPDATE_MAINCATEGORY_RED } from \"../Constants\"\r\nimport { addRecord, } from \"./Services/MainCategoryServices\"\r\n\r\nfunction* addSaga(action){\r\nlet response = yield addRecord(action.payload)\r\nyield put({type:ADD_MAINCATEGORY_RED, payload: response})\r\n}\r\nfunction* getSaga(){\r\n    let response = yield getRecord(action.payload)\r\nyield put({type:GET_MAINCATEGORY_RED, payload: response})\r\n}\r\nfunction* updateSaga(action){\r\n   yield updateRecord(action.payload)\r\nyield put({type:UPDATE_MAINCATEGORY_RED, payload: action.payload})\r\n}\r\nfunction* deleteSaga(action){\r\n     yield deleteRecord(action.payload)\r\n    yield put({type:DELETE_MAINCATEGORY_RED, payload: action.payload})\r\n}\r\nexport default function* maincategorySaga(){\r\n    yield takeEvery(ADD_MAINCATEGORY,addSaga)\r\n    yield takeEvery(GET_MAINCATEGORY,getSaga)\r\n    yield takeEvery(UPDATE_MAINCATEGORY,updateSaga)\r\n    yield takeEvery(DELETE_MAINCATEGORY,deleteSaga)\r\n}\r\n\r\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,GAAG,QAAO,oBAAoB;AACjD,SAASC,gBAAgB,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAEC,uBAAuB,QAAQ,cAAc;AACzM,SAASC,SAAS,QAAS,iCAAiC;AAE5D,UAAUC,OAAOA,CAACC,MAAM,EAAC;EACzB,IAAIC,QAAQ,GAAG,MAAMH,SAAS,CAACE,MAAM,CAACE,OAAO,CAAC;EAC9C,MAAMb,GAAG,CAAC;IAACc,IAAI,EAACZ,oBAAoB;IAAEW,OAAO,EAAED;EAAQ,CAAC,CAAC;AACzD;AACA,UAAUG,OAAOA,CAAA,EAAE;EACf,IAAIH,QAAQ,GAAG,MAAMI,SAAS,CAACL,MAAM,CAACE,OAAO,CAAC;EAClD,MAAMb,GAAG,CAAC;IAACc,IAAI,EAACR,oBAAoB;IAAEO,OAAO,EAAED;EAAQ,CAAC,CAAC;AACzD;AACA,UAAUK,UAAUA,CAACN,MAAM,EAAC;EACzB,MAAMO,YAAY,CAACP,MAAM,CAACE,OAAO,CAAC;EACrC,MAAMb,GAAG,CAAC;IAACc,IAAI,EAACN,uBAAuB;IAAEK,OAAO,EAAEF,MAAM,CAACE;EAAO,CAAC,CAAC;AAClE;AACA,UAAUM,UAAUA,CAACR,MAAM,EAAC;EACvB,MAAMS,YAAY,CAACT,MAAM,CAACE,OAAO,CAAC;EACnC,MAAMb,GAAG,CAAC;IAACc,IAAI,EAACV,uBAAuB;IAAES,OAAO,EAAEF,MAAM,CAACE;EAAO,CAAC,CAAC;AACtE;AACA,eAAe,UAAUQ,gBAAgBA,CAAA,EAAE;EACvC,MAAMtB,SAAS,CAACE,gBAAgB,EAACS,OAAO,CAAC;EACzC,MAAMX,SAAS,CAACM,gBAAgB,EAACU,OAAO,CAAC;EACzC,MAAMhB,SAAS,CAACQ,mBAAmB,EAACU,UAAU,CAAC;EAC/C,MAAMlB,SAAS,CAACI,mBAAmB,EAACgB,UAAU,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
