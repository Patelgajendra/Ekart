{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport RootReducer from \"./Reducers/RootReducer\";\nimport RootSaga from \"./Sagas/RootSaga\";\n// import RootSaga from \"../Sagas/RootSaga\";\n\nconst sagamiddleware = createSagaMiddleware();\nconst myStore = configureStore({\n  reducer: RootReducer,\n  middleware: () => [sagamiddleware]\n});\nmiddleware.run(RootSaga);\nexport default myStore;","map":{"version":3,"names":["configureStore","createSagaMiddleware","RootReducer","RootSaga","sagamiddleware","myStore","reducer","middleware","run"],"sources":["D:/Ducat 2023/Mern stack/react js 1 pm/Project/ekart/src/Store/Store.jsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\"\r\n\r\nimport RootReducer from \"./Reducers/RootReducer\"\r\nimport RootSaga from \"./Sagas/RootSaga\";\r\n// import RootSaga from \"../Sagas/RootSaga\";\r\n\r\nconst sagamiddleware = createSagaMiddleware()\r\n\r\nconst myStore = configureStore({\r\n    reducer:RootReducer,\r\n    middleware:()=>[sagamiddleware]\r\n})\r\nmiddleware.run(RootSaga)\r\n\r\nexport default myStore"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,CAAC,CAAC;AAE7C,MAAMI,OAAO,GAAGL,cAAc,CAAC;EAC3BM,OAAO,EAACJ,WAAW;EACnBK,UAAU,EAACA,CAAA,KAAI,CAACH,cAAc;AAClC,CAAC,CAAC;AACFG,UAAU,CAACC,GAAG,CAACL,QAAQ,CAAC;AAExB,eAAeE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
